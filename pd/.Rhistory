mean2 <- mean(depRaw[ind==categories[2]], na.rm=T)
sd2 <- sd(depRaw[ind==categories[2]], na.rm=T)
return(list("categories"=categoryNames,"catN"=catN, "varEqual"=varEqual, "pval"=pval, "cohensD"=cohensD, "cohensDlowCI"=cohensDlowCI, "cohensDhighCI"=cohensDhighCI, "effectSize"=effectSize, "mean1"=mean1, "sd1"=sd1, "mean2"=mean2, "sd2"=sd2))
}
processData <- function(varNames, depVarDF, depVarRawDF, donorsDF) {
indVar <- unlist(lapply(varNames, rep, length(depVarDF)))
depVar <- rep(names(depVarDF), length(varNames))
categories <- NA
catN <- NA
varEqual <- NA
rawP <- NA
adjP <- NA
cohensD <- NA
cohensDlowCI <- NA
cohensDhighCI <- NA
effectSize <- NA
mean1 <- NA
sd1 <- NA
mean2 <- NA
sd2 <- NA
res <- data.frame(cbind(indVar, depVar, categories, catN, varEqual, rawP, adjP, cohensD, cohensDlowCI, cohensDhighCI, effectSize, mean1, sd1, mean2, sd2))
indVarT <- str_c("donorsDF$", indVar)
depVarT <- str_c("depVarDF$", depVar)
depRawVarT <- str_c("depVarRawDF$", depVar)
for (i in 1:dim(res)[1]){
st <- suppressWarnings(smartT(depVarT[i], indVarT[i], depRawVarT[i], depVarDF=depVarDF, depVarRawDF = depVarRawDF, donorsDF = donorsDF))
res$categories[i] <- st$categories
res$catN[i] <- st$catN
res$varEqual[i] <- st$varEqual
res$rawP[i] <- st$pval
res$cohensD[i] <- st$cohensD
res$cohensDlowCI[i] <- st$cohensDlowCI
res$cohensDhighCI[i] <- st$cohensDhighCI
res$effectSize[i] <- st$effectSize
res$mean1[i] <- st$mean1
res$sd1[i] <- st$sd1
res$mean2[i] <- st$mean2
res$sd2[i] <- st$sd2
}
res$rawP <- as.numeric(res$rawP)
res$adjP <- p.adjust(res$rawP, method="BH")
res$cohensD <- as.numeric(res$cohensD)
res$cohensDlowCI <- as.numeric(res$cohensDlowCI)
res$cohensDhighCI <- as.numeric(res$cohensDhighCI)
names(res) <- c("Independent variable", "Dependent variable", "Categories", "Category n", "Equal variances", "Raw p-value", "Adj. p-value (FDR)", "Cohens D", "Cohens D CI low", "Cohens D CI high", "Effect size", "Mean cat 1", "SD cat 1", "Mean cat 2", "SD cat 2")
return(res)
}
res <- processData(varNames = varNames,
depVarDF = wb,
depVarRawDF = wbRaw,
donorsDF = donors)
res
knitr::kable(res[,1:11])
knitr::kable(res[,c(1,2,3,4,12:15)])
donors <- read.csv("~/Cam_Dropbox/Nat_Hastings/PD_data/donor_metadata.csv", row.names=1, na.strings="NA")
wb <- read.csv("~/Cam_Dropbox/Nat_Hastings/PD_data/WB_protein_levels_BoxCox_transformed.csv", row.names=1)
wb <- wb[c(21:40,1:20),]
wbRaw <- read.csv("~/Cam_Dropbox/Nat_Hastings/PD_data/WB_protein_levels.csv", row.names=1)
group <- c(rep("P", 20),rep("C", 20))
batch <- c(rep("1", 6), rep("2",6), rep("3",6), rep("4",2))
batch <- rep(batch,2)
names(wb)
row.names(wb)
row.names(wbRaw)
donors <- read.csv("~/Cam_Dropbox/Nat_Hastings/PD_data/donor_metadata.csv", row.names=1, na.strings="NA")
wb <- read.csv("~/Cam_Dropbox/Nat_Hastings/PD_data/WB_protein_levels_BoxCox_transformed.csv", row.names=1)
wb <- wb[c(21:40,1:20),]
wbRaw <- read.csv("~/Cam_Dropbox/Nat_Hastings/PD_data/WB_protein_levels.csv", row.names=1)
wbRaw <- wbRaw[c(21:40,1:20),]
group <- c(rep("P", 20),rep("C", 20))
batch <- c(rep("1", 6), rep("2",6), rep("3",6), rep("4",2))
batch <- rep(batch,2)
row.names(wb)==row.names(wbRaw)
varNames <- names(dat)[21:32] <- c("ParCort.Cx43",
"ParCort.GFAP",
"ParCort.ALdh1L1",
"ParCort.GDNF",
"StriBG.Cx43",
"StriBG.GFAP",
"StriBG.ALdh1L1",
"StriBG.GDNF",
"MidSN.Cx43",
"MidSN.GFAP",
"MidSN.ALdh1L1",
"MidSN.GDNF")
x <-c("ParCort.Cx43",
"ParCort.GFAP",
"ParCort.ALdh1L1",
"ParCort.GDNF",
"StriBG.Cx43",
"StriBG.GFAP",
"StriBG.ALdh1L1",
"StriBG.GDNF",
"MidSN.Cx43",
"MidSN.GFAP",
"MidSN.ALdh1L1",
"MidSN.GDNF")
x
x <- c(2150,795,280,225,2200,525,100,180,65,450)
sum(x)
sum(x)-3287
0.00099 * 1024* 300
0.00099 * 1024* 350
0.00099 * 1024* 334
0.021 * 1024* 334
0.00099*1025
0.00099*1024
0.021*1024
(8*1024)-1729
(2*1024)-1729
(8*1024)-7871
2000-1729
8000-7871
(8*1024)-6149
(8*1024)-6233
(8*1024)-6148
(8*1024)-6232
(8*1024)-6149
(8*1024)-6233
x <- rep(1,5)
y <- c(1.1, 1.3, 1.2,1.5, 0.9)
wilcox.test(x,y)
t.test(x,y)
f <- c(2150+795+280+225+2200+525+100+180+65+450)
sum(f)
3287+3683
x <- sample())
x <- sample(1:100,10)
x
t.test(x,1)
t.test(x,mu=1)
getBoxCoxLambda
?MASS::boxcox
citation()
citation("MASS")
cite("AICcmodavg")
?p.adjust
citation("effectsize")
?effectsize
?effectsize::effectsize
?effectsize::interpret
?effectsize::interpret_cohens_d
?effectsize::interpret_epsilon_squared
?anova
?Anova
??Anova
?car::Anova
citation("car")
# read table containing lateral offset data
offsetTable <- read.csv("~/git_repositories/dichroic-mirror-offsets/tables/offsetTable_March_2023.csv", stringsAsFactors = F)
objLens <- as.data.frame(cbind(c("4x", "10x", "20x", "30x", "60x"), c("UPLFLN 4X","UPLSAPO 10","UPLSAPO 20","UPLSAPO 30","UPLSAPO 60")))
source("~/git_repositories/dichroic-mirror-offsets/scripts/R/create_getOffset_py_function_March_2023.R")
shiny::runApp('Dropbox (Cambridge University)/Nat_Hastings/shiny_app/pd')
shiny::runApp('Dropbox (Cambridge University)/Nat_Hastings/shiny_app/pd')
donors <- read.csv("~/Cam_Dropbox/Nat_Hastings/PD_data/donor_metadata.csv", row.names=1, na.strings="NA")
View(donors)
names(donors)
order(names(donors))
donors <- donors[,order(names(donors))]
o <- order(names(donors))
o
is.vector(o)
donors <- read.csv("~/Cam_Dropbox/Nat_Hastings/PD_data/donor_metadata.csv", row.names=1, na.strings="NA")
donors$Dementia...cognitive.impairment <- as.factor(donors$Dementia...cognitive.impairment)
donors$Depression <- factor(donors$Depression)
donors$Memory.problems <- as.factor(donors$Memory.problems)
donors$Sleep.disturbance <- as.factor(donors$Sleep.disturbance)
donors$Aggression <- as.factor(donors$Aggression)
donors$Hallucinations <- as.factor(donors$Hallucinations)
donors$Psychotic.symptoms <- as.factor(donors$Psychotic.symptoms)
donors$LB.disease.type <- factor(donors$LB.disease.type)
donors$LB.Braak.stage <- factor(donors$LB.Braak.stage, ordered=TRUE)
donors$SN.depigmentation <- factor(donors$SN.depigmentation, ordered=TRUE)
donors$Amyloid.pathology <- factor(donors$Amyloid.pathology, ordered=TRUE)
donors$Tau.pathology <- factor(donors$Tau.pathology, ordered=TRUE)
donors$Vessel.disease...CAA <- factor(donors$Vessel.disease...CAA, ordered=TRUE)
donors$Age <- as.numeric(donors$Age)
donors$PD.duration <- as.numeric(donors$PD.duration)
donors$Gender <- as.factor(donors$Gender)
donors <- donors[,order(names(donors))]
donors <- read.csv("~/Cam_Dropbox/Nat_Hastings/PD_data/donor_metadata.csv", row.names=1, na.strings="NA")
donors$Dementia...cognitive.impairment <- as.factor(donors$Dementia...cognitive.impairment)
donors$Depression <- factor(donors$Depression)
donors$Memory.problems <- as.factor(donors$Memory.problems)
donors$Sleep.disturbance <- as.factor(donors$Sleep.disturbance)
donors$Aggression <- as.factor(donors$Aggression)
donors$Hallucinations <- as.factor(donors$Hallucinations)
donors$Psychotic.symptoms <- as.factor(donors$Psychotic.symptoms)
donors$LB.disease.type <- factor(donors$LB.disease.type)
donors$LB.Braak.stage <- factor(donors$LB.Braak.stage, ordered=TRUE)
donors$SN.depigmentation <- factor(donors$SN.depigmentation, ordered=TRUE)
donors$Amyloid.pathology <- factor(donors$Amyloid.pathology, ordered=TRUE)
donors$Tau.pathology <- factor(donors$Tau.pathology, ordered=TRUE)
donors$Vessel.disease...CAA <- factor(donors$Vessel.disease...CAA, ordered=TRUE)
donors$Age <- as.numeric(donors$Age)
donors$PD.duration <- as.numeric(donors$PD.duration)
donors$Gender <- as.factor(donors$Gender)
donors <- donors[,order(names(donors))]
row.names(donors)
names(donors)
names(donors)[4]
length(names(donors))
donors <- read.csv("~/Cam_Dropbox/Nat_Hastings/PD_data/donor_metadata.csv", row.names=1, na.strings="NA")
donors$Dementia...cognitive.impairment <- as.factor(donors$Dementia...cognitive.impairment)
donors$Depression <- factor(donors$Depression)
donors$Memory.problems <- as.factor(donors$Memory.problems)
donors$Sleep.disturbance <- as.factor(donors$Sleep.disturbance)
donors$Aggression <- as.factor(donors$Aggression)
donors$Hallucinations <- as.factor(donors$Hallucinations)
donors$Psychotic.symptoms <- as.factor(donors$Psychotic.symptoms)
donors$LB.disease.type <- factor(donors$LB.disease.type)
donors$LB.Braak.stage <- factor(donors$LB.Braak.stage, ordered=TRUE)
donors$SN.depigmentation <- factor(donors$SN.depigmentation, ordered=TRUE)
donors$Amyloid.pathology <- factor(donors$Amyloid.pathology, ordered=TRUE)
donors$Tau.pathology <- factor(donors$Tau.pathology, ordered=TRUE)
donors$Vessel.disease...CAA <- factor(donors$Vessel.disease...CAA, ordered=TRUE)
donors$Age <- as.numeric(donors$Age)
donors$PD.duration <- as.numeric(donors$PD.duration)
donors$Gender <- as.factor(donors$Gender)
donors <- donors[,order(names(donors))]
donors <- donors[,c(4,1:3,5:18)]
punctaRaw <- read.csv("~/Cam_Dropbox/Nat_Hastings/PD_data/Cx43 puncta per cell - Sheet1.csv", row.names=1)
punctaRaw <- punctaRaw[c(18:29, 10:17, 1:9, 30:40),]
row.names(punctaRaw)
row.names(punctaRaw)==donors$Brain.Bank.ID
row.names(punctaRaw)[1:13]==donors$Brain.Bank.ID[1:13]
row.names(punctaRaw)[1:12]==donors$Brain.Bank.ID[1:12]
row.names(punctaRaw)[1:12]
donors$Brain.Bank.ID[1:12]
wb <- read.csv("~/Cam_Dropbox/Nat_Hastings/PD_data/WB_protein_levels.csv", row.names=1)
wb <- wb[c(21:40,1:20),]
row.names(wb)
View(punctaRaw)
names(punctaRaw)
names(wb)
punctaRaw <- punctaRaw[,order(names(punctaRaw))]
length(names(punctaRaw))
dim(punctaRaw)
names(punctaRaw)
library(stringr)
names(wb)
str_split(names(wb), ".")
str_split(names(wb), "\.")
str_split(names(wb), ".")
?str_split
str_split(names(wb), ".", fixed=T)
str_split(names(wb), "\\." )
x <- str_split(names(wb), "\\." )
x[1]
x[[1]]
x[[]][1]
xd <- data.frame(x)
xd
dim(xd)
View(xd)
xd <- data.frame(x, byrows=T)
xd <- data.frame(x, byrows=)
xd <- data.frame(x, byrows=F)
xd <- t(data.frame(x))
newNames <- str_c(xd$V2, xd$V1, sep=".")
xd$V2
is.data.frame(xd)
xd <- data.frame(t(data.frame(x)))
newNames <- str_c(xd$X2, xd$X1, sep=".")
newNames
x <- str_split(names(wb), "\\." )
x
x1 <- x[[1:12]][1]
x1 <- x[[1:12]]
x[[1]]
x[[1]][1]
length(x)
x1 <- c()
for (i in 1:length(x))
{
x1 <- c(x1, x[[i]][1])
}
x1
x <- str_split(names(wb), "\\." )
x1 <- c()
x2 <- c()
for (i in 1:length(x))
{
x1 <- c(x1, x[[i]][1])
x2 <- c(x1, x[[i]][2])
}
x1
x2
str_c(x2,x1,sep=".")
x1
x2
x <- str_split(names(wb), "\\." )
x1 <- c()
x2 <- c()
for (i in 1:length(x))
{
x1 <- c(x1, x[[i]][1])
x2 <- c(x1, x[[i]][2])
}
x1
x2
x <- str_split(names(wb), "\\." )
x1 <- c()
x2 <- c()
for (i in 1:length(x))
{
x1 <- c(x1, x[[i]][1])
x2 <- c(x2, x[[i]][2])
}
str_c(x2,x1,sep=".")
names(wb) <- str_c(x2,x1,sep=".")
wb <- wb[,order(names(wb))]
View(wb)
shiny::runApp('Dropbox (Cambridge University)/Nat_Hastings/shiny_app/pd')
dat <- data.frame(cbind(Group,donors,wb,punctaRaw))
Group <- c(rep("PD", 20), rep("Control", 20))
dat <- data.frame(cbind(Group,donors,wb,punctaRaw))
dim(dat)
View(dat)
library(stringr)
donors <- read.csv("~/Cam_Dropbox/Nat_Hastings/PD_data/donor_metadata.csv", row.names=1, na.strings="NA")
donors$Dementia...cognitive.impairment <- as.factor(donors$Dementia...cognitive.impairment)
donors$Depression <- factor(donors$Depression)
donors$Memory.problems <- as.factor(donors$Memory.problems)
donors$Sleep.disturbance <- as.factor(donors$Sleep.disturbance)
donors$Aggression <- as.factor(donors$Aggression)
donors$Hallucinations <- as.factor(donors$Hallucinations)
donors$Psychotic.symptoms <- as.factor(donors$Psychotic.symptoms)
donors$LB.disease.type <- factor(donors$LB.disease.type)
donors$LB.Braak.stage <- factor(donors$LB.Braak.stage, ordered=TRUE)
donors$SN.depigmentation <- factor(donors$SN.depigmentation, ordered=TRUE)
donors$Amyloid.pathology <- factor(donors$Amyloid.pathology, ordered=TRUE)
donors$Tau.pathology <- factor(donors$Tau.pathology, ordered=TRUE)
donors$Vessel.disease...CAA <- factor(donors$Vessel.disease...CAA, ordered=TRUE)
donors$Age <- as.numeric(donors$Age)
donors$PD.duration <- as.numeric(donors$PD.duration)
donors$Gender <- as.factor(donors$Gender)
donors <- donors[,order(names(donors))]
donors <- donors[,c(4,1:3,5:18)]
punctaRaw <- read.csv("~/Cam_Dropbox/Nat_Hastings/PD_data/Cx43 puncta per cell - Sheet1.csv", row.names=1)
punctaRaw <- punctaRaw[c(18:29, 10:17, 1:9, 30:40),]
punctaRaw <- punctaRaw[,order(names(punctaRaw))]
names(punctaRaw) <- c("Puncta.BGCaud",
"Puncta.BGGlob.P",
"Puncta.BGPuta",
"Puncta.FrontCort",
"Puncta.InsCort",
"Puncta.MidSN",
"Puncta.ParCort")
wb <- read.csv("~/Cam_Dropbox/Nat_Hastings/PD_data/WB_protein_levels.csv", row.names=1)
wb <- wb[c(21:40,1:20),]
x <- str_split(names(wb), "\\." )
x1 <- c()
x2 <- c()
for (i in 1:length(x))
{
x1 <- c(x1, x[[i]][1])
x2 <- c(x2, x[[i]][2])
}
names(wb) <- str_c(x2,x1,sep=".")
wb <- wb[,order(names(wb))]
Group <- c(rep("PD", 20), rep("Control", 20))
dat <- data.frame(cbind(Group,donors,wb,punctaRaw))
names(dat)
dat$Pathology.Description
write.csv(dat, "~/Cam_Dropbox/Nat_Hastings/shiny_app/pd/data/data.csv")
library(stringr)
donors <- read.csv("~/Cam_Dropbox/Nat_Hastings/PD_data/donor_metadata.csv", row.names=1, na.strings="NA")
donors$Dementia...cognitive.impairment <- as.factor(donors$Dementia...cognitive.impairment)
donors$Depression <- factor(donors$Depression)
donors$Memory.problems <- as.factor(donors$Memory.problems)
donors$Sleep.disturbance <- as.factor(donors$Sleep.disturbance)
donors$Aggression <- as.factor(donors$Aggression)
donors$Hallucinations <- as.factor(donors$Hallucinations)
donors$Psychotic.symptoms <- as.factor(donors$Psychotic.symptoms)
donors$LB.disease.type <- factor(donors$LB.disease.type)
donors$LB.Braak.stage <- factor(donors$LB.Braak.stage, ordered=TRUE)
donors$SN.depigmentation <- factor(donors$SN.depigmentation, ordered=TRUE)
donors$Amyloid.pathology <- factor(donors$Amyloid.pathology, ordered=TRUE)
donors$Tau.pathology <- factor(donors$Tau.pathology, ordered=TRUE)
donors$Vessel.disease...CAA <- factor(donors$Vessel.disease...CAA, ordered=TRUE)
donors$Age <- as.numeric(donors$Age)
donors$PD.duration <- as.numeric(donors$PD.duration)
donors$Gender <- as.factor(donors$Gender)
donors <- donors[,order(names(donors))]
donors <- donors[,c(4,1:3,5:18)]
punctaRaw <- read.csv("~/Cam_Dropbox/Nat_Hastings/PD_data/Cx43 puncta per cell - Sheet1.csv", row.names=1)
punctaRaw <- punctaRaw[c(18:29, 10:17, 1:9, 30:40),]
punctaRaw <- punctaRaw[,order(names(punctaRaw))]
names(punctaRaw) <- c("Puncta.BGCaud",
"Puncta.BGGlob.P",
"Puncta.BGPuta",
"Puncta.FrontCort",
"Puncta.InsCort",
"Puncta.MidSN",
"Puncta.ParCort")
wb <- read.csv("~/Cam_Dropbox/Nat_Hastings/PD_data/WB_protein_levels.csv", row.names=1)
wb <- wb[c(21:40,1:20),]
x <- str_split(names(wb), "\\." )
x1 <- c()
x2 <- c()
for (i in 1:length(x))
{
x1 <- c(x1, x[[i]][1])
x2 <- c(x2, x[[i]][2])
}
names(wb) <- str_c(x2,x1,sep=".")
wb <- wb[,order(names(wb))]
Group <- c(rep("PD", 20), rep("Control", 20))
dat <- data.frame(cbind(Group,donors,wb,punctaRaw))
dat$Pathology.Description <- NULL
write.csv(dat, "~/Cam_Dropbox/Nat_Hastings/shiny_app/pd/data/data.csv")
dim(dat)
names(dat)
runApp('Dropbox (Cambridge University)/Nat_Hastings/scripts/shiny_test.R')
runApp('Dropbox (Cambridge University)/Nat_Hastings/scripts/shiny_test.R')
runApp('Dropbox (Cambridge University)/Nat_Hastings/scripts/shiny_test.R')
runApp('Dropbox (Cambridge University)/Nat_Hastings/scripts/shiny_test.R')
shiny::runApp('git_repositories/Hastings-PD-Cx43-shiny/pd')
?conditionalPanel
runApp('git_repositories/Hastings-PD-Cx43-shiny/pd')
4.5*30
73.80+16
89.8 *120
runApp('git_repositories/Hastings-PD-Cx43-shiny/pd')
3500*12
240/6
1578+1290
2868/12
747.39/12
333*12
666*12
144394.13-2428.82
runApp('git_repositories/Hastings-PD-Cx43-shiny/pd')
runApp('git_repositories/Hastings-PD-Cx43-shiny/pd')
b <- read.csv("~/Cam_Dropbox/Landgraf_lab/incubator/Incubator log 130723.CSV", header=F)
g <- b[,c(1,3)]
b <- b[,c(1,2)]
names(b) <- names(g) <- c("dt", "temp")
b$dt <- ymd_hms(b$dt)
library(tidyverse)
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
8*16
shiny::runApp('git_repositories/Hastings-PD-Cx43-shiny/pd')
?colourInput
??colourInput
runApp('git_repositories/Hastings-PD-Cx43-shiny/pd')
library(colourpicker)
colourpicker::colourInput()
runApp('git_repositories/Hastings-PD-Cx43-shiny/pd')
runApp('git_repositories/Hastings-PD-Cx43-shiny/pd')
runApp('git_repositories/Hastings-PD-Cx43-shiny/pd')
runApp('git_repositories/Hastings-PD-Cx43-shiny/pd')
runApp('git_repositories/Hastings-PD-Cx43-shiny/pd')
install.packages("reactCheckbox")
?corrplot
library(corrplot)
?corrplot
library(reactCheckbox)
?reactCheckboxesInput
if(interactive()) {
shinyApp(ui, server)
}
ui <- fluidPage(
reactCheckboxesInput(
"iris",
list(
checkbox("Sepal length", FALSE),
checkbox("Sepal width", FALSE),
checkbox("Petal length", FALSE),
checkbox("Petal width", FALSE)
),
headLabel = tags$span(
"Make a choice", style = "font-size: 1.8rem; font-style: italic;"
),
headClass = "custom",
theme = "material",
styles = list(
"custom" = checkboxStyle(
checked = css(
background.color = "darkred"
),
checked_hover = css(
background.color = "maroon"
),
unchecked = css(
background.color = "darkorange"
),
unchecked_hover = css(
background.color = "orange"
),
indeterminate = css(
background.color = "gold"
),
indeterminate_hover = css(
background.color = "yellow"
)
)
)
)
)
runApp('tmp/checkBoxTest')
runApp('git_repositories/Hastings-PD-Cx43-shiny/pd')
runApp('git_repositories/Hastings-PD-Cx43-shiny/pd')
runApp('tmp/checkBoxTest')
?observe
runApp('git_repositories/Hastings-PD-Cx43-shiny/pd')
